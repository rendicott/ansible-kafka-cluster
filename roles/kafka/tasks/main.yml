---
- name: include uninstall when upgrade flag
  include: uninstall.yml
  when: upgrade

- name: disable firewalld
  service: name=firewalld state=stopped enabled=no
  ignore_errors: True  #when firewalld is stopped
  tags: kafka

- name: install tools
  yum: name="@Development tools" state=present
  tags: kafka

- name: create group
  group:
    name: kafka
    state: present
  tags: kafka

- name: create user
  user:
    name: kafka
    group: kafka
  tags: kafka

- name: Setting internal variable
  set_fact:
    kafka_name: kafka_{{ kafka.scala_version }}-{{ kafka.version }}
  tags: kafka

- name: Setting internal variable
  set_fact:
    kafka_dir: "{{ kafka.install_dir }}/{{ kafka_name }}"
  tags: kafka

- name: check if tar has been downloaded
  command: test -f /tmp/{{ kafka_name }}.tgz
  register: kafka_tar_downloaded
  failed_when: kafka_tar_downloaded.rc not in [0, 1]
  changed_when: False
  tags: kafka

- name: Ensure Kafka tar is downloaded
  get_url:
    url: "{{ kafka.mirror }}/kafka/{{ kafka.version }}/{{ kafka_name }}.tgz"
    dest: /tmp
  tags: kafka
  when: kafka_tar_downloaded.rc == 1

- name: Ensure tar is extracted
  command: tar xzf /tmp/{{ kafka_name }}.tgz chdir="{{ kafka.install_dir }}"
  tags: kafka

- name: ensure kafka dir is owned by kafka user
  file: path="{{ kafka_dir }}" state=directory owner=kafka group=kafka recurse=yes

# Config and start Kafka
- name: Ensures data dir exists
  file:
    path: "{{ item }}"
    state: directory
    owner: kafka
    group: kafka
  with_items:
    - "{{ kafka_data_dirs }}"
  tags: kafka

- name: Copy real config
  template:
    src: kafka-properties.j2
    dest: "{{ kafka_dir }}/config/real-server.properties"
  notify: restart kafka
  tags: kafka

- name: systemd start script
  template:
    src: kafka-systemd.j2
    dest: /etc/systemd/system/kafka.service
    owner: root
    group: root
    mode: 644
  notify: start kafka
  tags: kafka

- name: make sure file limits is in security limits.conf
  lineinfile: dest=/etc/security/limits.conf state=present create=yes line="{{ item }} - nofile {{ file_max }}"
  with_items:
    - "*"
    - root
    - kafka

- name: verify swappiness is set to "{{ swappiness }}"
  sysctl:
    name: vm.swappiness
    value: "{{ swappiness }}"
    state: present
    reload: no
  ignore_errors: yes

- name: verify fs.file-max is set to "{{ file_max }}"
  sysctl:
    name: fs.file-max
    value: "{{ file_max }}"
    state: present
    reload: yes

- name: replace small heap
  replace:
    dest: "/opt/{{ kafka_name }}/bin/kafka-server-start.sh"
    regexp: 'Xm.1G \-Xm.1G'
    replace: "Xmx{{ heap_size_gb }}G -Xms{{ heap_size_gb }}G"

- name: ensure kafka service starts on boot
  service: name=kafka state=started enabled=yes

...
